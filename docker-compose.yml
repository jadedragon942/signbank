# Docker Compose for Signbank
# Includes database, redis, web application, and worker services

version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: signbank
      POSTGRES_USER: signbank
      POSTGRES_PASSWORD: signbank_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=en_US.UTF-8"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U signbank"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Signbank web application
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./media:/app/media
      - ./static:/app/static
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - SECRET_KEY=your-secret-key-change-this-in-production
      - DB_NAME=signbank
      - DB_USER=signbank
      - DB_PASSWORD=signbank_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=admin123
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker for background tasks
  worker:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    command: celery -A signbank worker -l info --concurrency=2
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
    environment:
      - DEBUG=false
      - SECRET_KEY=your-secret-key-change-this-in-production
      - DB_NAME=signbank
      - DB_USER=signbank
      - DB_PASSWORD=signbank_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "celery", "-A", "signbank", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery beat scheduler (for periodic tasks)
  scheduler:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    command: celery -A signbank beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./logs:/app/logs
    environment:
      - DEBUG=false
      - SECRET_KEY=your-secret-key-change-this-in-production
      - DB_NAME=signbank
      - DB_USER=signbank
      - DB_PASSWORD=signbank_password
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./static:/app/static:ro
      - ./media:/app/media:ro
      - ./docker/ssl:/etc/nginx/ssl  # SSL certificates (if using HTTPS)
    depends_on:
      - web
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: signbank_network
